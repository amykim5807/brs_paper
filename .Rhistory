View(fulldata)
## UP TO DATE: 07/24
## MEANS OF TRANSPORTATION
setwd("~/git/brs_paper")
transportation <- read.csv("data/transportation.csv")
data <- read.csv("data/cleaned.csv")
# Merging Data so FIPS are accurate
fulldata <- merge(data,transportation,by = "FIPS")
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
races <- c("all","white","black")
transp <- c("caralone","carpool","publictransport","walk","taxibike","home")
sink("outputs/raw/transp.csv")
for (i in 1:5){
cat(county_names[i],"\n")
tempdata <- fulldata[which(fulldata$FIPS %in% county_groups[[i]])]
for (r in 1:3){
cat(races[r],"\n")
pop <- sum(tempdata[[paste0(races[r],"pop")]],na.rm=TRUE)
for (t in 1:6){
cat(transp[t],",")
temptransp <- sum(tempdata[[paste0(races[r],transp[t])]],na.rm=TRUE)
cat(temptransp/pop,"\n")
}
}
}
sink()
county_groups
county_groups[[i]]
sink("outputs/raw/transp.csv")
for (i in 1:5){
cat(county_names[i],"\n")
tempdata <- fulldata[which(fulldata$FIPS %in% county_groups[[i]]),]
for (r in 1:3){
cat(races[r],"\n")
pop <- sum(tempdata[[paste0(races[r],"pop")]],na.rm=TRUE)
for (t in 1:6){
cat(transp[t],",")
temptransp <- sum(tempdata[[paste0(races[r],transp[t])]],na.rm=TRUE)
cat(temptransp/pop,"\n")
}
}
}
sink()
sink("outputs/raw/acs_hsplus.csv")
for ( i in 1:5){
cat(county_names[i],",")
educ_data <- fulldata[which(fulldata$FIPS %in% county_groups[[i]]),]
pop <- sum(educ_data$Pop_25.,na.rm=TRUE)
hsplus <- sum(educ_data$Some.College, educ_data$Associate.s.Degree, educ_data$Bachelor.s.Degree,educ_data$Graduate.Professional.Degree,na.rm=TRUE)
cat(hsplus/pop,"\n")
}
sink()
## UP TO DATE: 07/19
## EDUCATIONAL ATTAINMENT DATA -- ACS 2017
closeAllConnections()
#############################################################
###################### IMPORTING DATA #######################
#############################################################
setwd("~/git/brs_paper")
ed <- read.csv("data/ed_attainment.csv")
data <- read.csv("data/cleaned.csv")
# Merging Data so FIPS are accurate
fulldata <- merge(data, ed, by="FIPS")
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
races <- c("All","White","Black")
#############################################################
#################### HELPER FUNCTIONS #######################
#############################################################
educ_grad <- function(FIPS){
educ_data <- fulldata[which(fulldata$FIPS %in% FIPS),]
hs_gradrate <- 1 - sum(educ_data$Less.than.Ninth.Grade,educ_data$X9.12.No.Diploma,na.rm=TRUE)/sum(educ_data$Pop_25.,na.rm=TRUE)
col_gradrate <- sum(educ_data$Bachelor.s.Degree,educ_data$Graduate.Professional.Degree,na.rm=TRUE)/sum(educ_data$Pop_25.,na.rm=TRUE)
cat("High School,College\n")
cat(hs_gradrate,",", col_gradrate)
}
educ_grad_white <- function(FIPS){
educ_data <- fulldata[which(fulldata$FIPS %in% FIPS),]
hs_gradrate <- sum(educ_data$White.alone..not.Hisp.Lat..High.School.Graduate,na.rm=TRUE)/sum(educ_data$White.alone..not.Hisp.Lat..Population,na.rm=TRUE)
col_gradrate <- sum(educ_data$White.alone..not.Hisp.Lat..Bachelor.s.Degree,na.rm=TRUE)/sum(educ_data$White.alone..not.Hisp.Lat..Population,na.rm=TRUE)
cat("High School,College\n")
cat(hs_gradrate,",", col_gradrate)
}
educ_grad_black <- function(FIPS){
educ_data <- fulldata[which(fulldata$FIPS %in% FIPS),]
hs_gradrate <- sum(educ_data$Black.alone.High.School.Graduate,na.rm=TRUE)/sum(educ_data$Black.alone.Population,na.rm=TRUE)
col_gradrate <- sum(educ_data$Black.alone.Bachelor.s.Degree,na.rm=TRUE)/sum(educ_data$Black.alone.Population,na.rm=TRUE)
cat("High School,College\n")
cat(hs_gradrate,",", col_gradrate)
}
funcs <- list(educ_grad,educ_grad_white,educ_grad_black)
names(funcs) <- races
#####################################################################
############### HIGH SCHOOL/COLLEGE GRADUATION RATE #################
#####################################################################
allcountygroups <- append(county_groups,white)
allcountynames <- c(county_names,whitenames)
sink("outputs/raw/educ.csv")
for (counties in 1:9){
cat("\n",allcountynames[counties],"\n")
for (r in races){
cat("\n",r,"\n")
funcs[[r]](allcountygroups[[counties]])
}
cat("\n\n")
}
sink()
sink('outputs/educ_grad.txt')
cat("GRAPH ONE\n\n")
cat("USA\n")
educ_grad(all_counties)
cat("\nWhite in USA\n")
educ_grad_white(all_counties)
cat("\nBlack in USA\n")
educ_grad_black(all_counties)
cat("\nNon-South Rural\n")
educ_grad(nonsouth_rural)
cat("\nBlack in Black Rural South\n")
educ_grad_black(brs_counties)
cat("\n\nGRAPH TWO\n\n")
cat("South\n")
educ_grad(south_counties)
cat("\nWhite in South Metro\n")
educ_grad_white(south_metro)
cat("\nBlack in South Metro\n")
educ_grad_black(south_metro)
cat("\nWhite in Black Rural South\n")
educ_grad_white(brs_counties)
cat("\nBlack in Black Rural South\n")
educ_grad_black(brs_counties)
sink()
## HIGH SCHOOL PLUS ##
sink("outputs/raw/acs_hsplus.csv")
for ( i in 1:5){
cat(county_names[i],",")
educ_data <- fulldata[which(fulldata$FIPS %in% county_groups[[i]]),]
pop <- sum(educ_data$Pop_25.,na.rm=TRUE)
hsplus <- sum(educ_data$Some.College, educ_data$Associate.s.Degree, educ_data$Bachelor.s.Degree,educ_data$Graduate.Professional.Degree,na.rm=TRUE)
cat(hsplus/pop,"\n")
}
sink()
View(fulldata)
fulldata[which(fulldata$FIPS==51013)]
fulldata[which(fulldata$FIPS==51013),]
View(fulldata[which(fulldata$FIPS==51013),])
sink("outputs/raw/acs_hsplus.csv")
for ( i in 1:5){
cat(county_names[i],",")
educ_data <- fulldata[which(fulldata$FIPS %in% county_groups[[i]]),]
pop <- sum(educ_data$Pop_25.,na.rm=TRUE)
hsplus <- sum(educ_data$Associate.s.Degree, educ_data$Bachelor.s.Degree,educ_data$Graduate.Professional.Degree,na.rm=TRUE)
cat(hsplus/pop,"\n")
}
sink()
View(fulldata[which(fulldata$FIPS==51003),])
View(fulldata[which(fulldata$FIPS==51107),])
fulldata[which(fulldata$FIPS==51013)]
View(fulldata[which(fulldata$FIPS==51013),])
educ_data <- fulldata[which(fulldata$FIPS %in% white_rural_south),]
pop <- sum(educ_data$Pop_25.,na.rm=TRUE)
hsplus <- sum(educ_data$Associate.s.Degree, educ_data$Bachelor.s.Degree,educ_data$Graduate.Professional.Degree,na.rm=TRUE)
print(hsplus/pop)
educ_data <- fulldata[which(fulldata$FIPS %in% brs_counties),]
pop <- sum(educ_data$Pop_25.,na.rm=TRUE)
hsplus <- sum(educ_data$Associate.s.Degree, educ_data$Bachelor.s.Degree,educ_data$Graduate.Professional.Degree,na.rm=TRUE)
print(hsplus/pop)
sink("outputs/raw/transp.csv")
for (i in 1:5){
cat(county_names[i],"\n")
tempdata <- fulldata[which(fulldata$FIPS %in% county_groups[[i]]),]
for (t in 1:6){
cat(transp[t],",")
pop = 0
for (r in 1:3){
pop = pop + sum(tempdata[[paste0(races[r],transp[t])]],na.rm=TRUE)
}
for (r in 1:3){
cat(races[r],"\n")
temptransp <- sum(tempdata[[paste0(races[r],transp[t])]],na.rm=TRUE)
cat(temptransp/pop,"\n")
}
}
}
sink()
## UP TO DATE: 07/24
## MEANS OF TRANSPORTATION
setwd("~/git/brs_paper")
transportation <- read.csv("data/transportation.csv")
data <- read.csv("data/cleaned.csv")
# Merging Data so FIPS are accurate
fulldata <- merge(data,transportation,by = "FIPS")
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
races <- c("all","white","black")
transp <- c("caralone","carpool","publictransport","walk","taxibike","home")
sink("outputs/raw/transp.csv")
for (i in 1:5){
cat(county_names[i],"\n")
tempdata <- fulldata[which(fulldata$FIPS %in% county_groups[[i]]),]
for (r in 1:3){
cat(races[r],"\n")
pop <- sum(tempdata[[paste0(races[r],"pop")]],na.rm=TRUE)
for (t in 1:6){
cat(transp[t],",")
temptransp <- sum(tempdata[[paste0(races[r],transp[t])]],na.rm=TRUE)
cat(temptransp/pop,"\n")
}
}
}
sink()
sink("outputs/raw/transp.csv")
for (i in 1:5){
cat(county_names[i],"\n")
tempdata <- fulldata[which(fulldata$FIPS %in% county_groups[[i]]),]
for (t in 1:6){
cat(transp[t],",")
pop = 0
for (r in 1:3){
pop = pop + sum(tempdata[[paste0(races[r],transp[t])]],na.rm=TRUE)
}
for (r in 1:3){
cat(races[r],"\n")
temptransp <- sum(tempdata[[paste0(races[r],transp[t])]],na.rm=TRUE)
cat(temptransp/pop,"\n")
}
}
}
sink()
sink("outputs/raw/transp.csv")
for (i in 1:5){
cat(county_names[i],"\n")
tempdata <- fulldata[which(fulldata$FIPS %in% county_groups[[i]]),]
for (t in 1:6){
cat(transp[t],"\n")
pop = 0
for (r in 1:3){
pop = pop + sum(tempdata[[paste0(races[r],transp[t])]],na.rm=TRUE)
}
for (r in 1:3){
cat(races[r],",")
temptransp <- sum(tempdata[[paste0(races[r],transp[t])]],na.rm=TRUE)
cat(temptransp/pop,"\n")
}
}
}
sink()
sink("outputs/raw/transp.csv")
for (i in 1:5){
cat(county_names[i],"\n")
tempdata <- fulldata[which(fulldata$FIPS %in% county_groups[[i]]),]
for (t in 1:6){
cat(transp[t],"\n")
pop = sum(tempdata[[paste0("all",transp[t])]],na.rm=TRUE)
for (r in 1:3){
cat(races[r],",")
temptransp <- sum(tempdata[[paste0(races[r],transp[t])]],na.rm=TRUE)
cat(temptransp/pop,"\n")
}
}
}
sink()
## CLEANING DATA
pop <- read.csv("data/county_pop.csv")
temp <- unlist(strsplit(as.character(pop$X2010),"[(]"))
pop$X2010 <- as.numeric(temp[which(substr(temp,1,1)!="r")])
pop$X1990 <- as.numeric(gsub("[^0-9.]","",pop$X1990))
rurality <- read.csv("data/ruralcodes.csv")
fulldata <- merge(rurality,pop,by.x="FIPS",by.y="fips")
fulldata$Population_2010 <- as.numeric(gsub("[^0-9.]","",fulldata$Population_2010))
## CLASSIFYING INTO SOUTH/NOT
south_st <- c(10, 11, 12, 13, 24, 37, 45, 51, 54, 01, 21, 28, 47, 05, 22, 40, 48) #Southern states, as classified by Census regions
south <- as.numeric(substr(str_pad(fulldata$FIPS,5,pad="0"),1,2)) %in% south_st
## CLASSIFYING INTO RURAL/NOT
rural <- fulldata$RUCC_2013 >= 4
## CLASSIFYING INTO WHITE or BLACK
black <- (fulldata$black_acs /fulldata$X2017) >= 0.35
white <- (fulldata$white_acs /fulldata$X2017) >= 0.9
sum(fulldata$black_acs[which(black)])/sum(fulldata$X2017[which(black)])
## FINAL
cleaned <- data.frame(FIPS=fulldata$FIPS,county=fulldata$County_Name,state=fulldata$State,rural=rural,south=south,black35 = black, white90 = white,X1990=fulldata$X1990,X2000=fulldata$X2000,X2010=fulldata$X2010,X2017=fulldata$X2017, pctblack=(fulldata$black_acs /fulldata$X2017),pctwhite=(fulldata$white_acs/fulldata$X2017))
write.csv(cleaned,'data/cleaned.csv')
View(pop)
## UP TO DATE: 07/18
## BASIC DEMOGRAPHIC BREAKDOWN
### IMPORTING DATA ###
setwd("~/git/brs_paper")
dems <- read.csv("data/demographics.csv")
data <- read.csv("data/cleaned.csv")
# Merging Data so FIPS are accurate
fulldata <- merge(data,dems)
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
# LIST of LISTS
groups <- list(all_counties,rural_counties,brs_counties)
names <- c("USA","Rural","Black Rural South")
sink('outputs/raw/dems.csv')
for (i in 1:3){
cat("\n",names[i],"\n")
new <- fulldata[which(fulldata$FIPS %in% groups[[i]]),]
pop <- sum(new$Population, na.rm=TRUE)
cat("White Non-Hispanic, ",sum(new$White.Alone,na.rm=TRUE)/pop)
cat("\nBlack Non-Hispanic, ",sum(new$Black.Alone,na.rm=TRUE)/pop)
cat("\nHispanic/Latino, ",sum(new$Hispanic.Latino,na.rm=TRUE)/pop)
cat("\nAsian Non-Hispanic, ",sum(new$Asian.Alone,na.rm=TRUE)/pop)
cat("\nOther, ",sum(new$AIAN.Alone,new$NHOPI.Alone,new$Other.Alone,new$Two.or.More.Races,na.rm=TRUE)/pop)
}
sink()
View(dems)
#############################################################
setwd("~/git/brs_paper")
pov <- read.csv("data/pov_all.csv")
data <- read.csv("data/cleaned.csv")
fulldata <- merge(data,pov,by='FIPS')
fulldata$X1989 <- fulldata$X1990
fulldata <- fulldata[-(12551:12554),]
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
# Years
yrs <- c(1989,2000,2010,2017)
View(fulldata)
setwd("~/git/brs_paper")
earnings <- read.csv("data/earnings.csv")
# Rurality Data
data <- read.csv("data/cleaned.csv")
# Merging Data so FIPS are accurate
fulldata <- merge(data,earnings,by = "FIPS")
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
races <- c('','White.','Black.')
View(fulldata)
emp <- read.csv("data/emp.csv")
#####################################
setwd("~/git/brs_paper")
earnings <- read.csv("data/earnings.csv")
# Rurality Data
data <- read.csv("data/cleaned.csv")
# Merging Data so FIPS are accurate
fulldata <- merge(data,earnings,by = "FIPS")
# Emp data
emp <- read.csv("data/emp.csv")
fulldata <- merge(fulldata, emp, by="FIPS")
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
View(fulldata)
## UP TO DATE: 07/19
## MEDIAN EARNINGS -- FOR POPULATION 16 YEARS AND OVER WITH EARNINGS IN THE PAST 12 MONTHS
#############################################################
###################### IMPORTING DATA #######################
#############################################################
setwd("~/git/brs_paper")
earnings <- read.csv("data/earnings.csv")
# Rurality Data
data <- read.csv("data/cleaned.csv")
# Merging Data so FIPS are accurate
fulldata <- merge(data,earnings,by = "FIPS")
# Emp data
emp <- read.csv("data/emp.csv")
fulldata <- merge(fulldata, emp, by="FIPS")
whiteearnings <- fulldata$White.Median.Earnings
blackearnings <- fulldata$Black.Median.Earnings
earnings <- fulldata$Median.Earnings
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
races <- c('','white','black')
##############################################################
###################### GETTING NUMBERS #######################
##############################################################
sink("outputs/raw/earnings.csv")
for (counties in 1:5){
cat("\n",county_names[counties],"\n")
data <- fulldata[which(fulldata$FIPS %in% county_groups[[counties]]),]
for (r in races){
cat(r,",")
mn <- weighted.median(as.numeric(as.character(data[[paste0(r,"Median.Earnings")]])),as.numeric(as.character(data[[paste0(r,"pop16")]])),na.rm=TRUE)
cat(mn,"\n")
}
cat("\n\n")
}
sink()
## UP TO DATE: 07/19
## MEDIAN EARNINGS -- FOR POPULATION 16 YEARS AND OVER WITH EARNINGS IN THE PAST 12 MONTHS
#############################################################
###################### IMPORTING DATA #######################
#############################################################
setwd("~/git/brs_paper")
earnings <- read.csv("data/earnings.csv")
# Rurality Data
data <- read.csv("data/cleaned.csv")
# Merging Data so FIPS are accurate
fulldata <- merge(data,earnings,by = "FIPS")
# Emp data
emp <- read.csv("data/emp.csv")
fulldata <- merge(fulldata, emp, by="FIPS")
whiteearnings <- fulldata$White.Median.Earnings
blackearnings <- fulldata$Black.Median.Earnings
earnings <- fulldata$Median.Earnings
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
races <- c('','white','black')
##############################################################
###################### GETTING NUMBERS #######################
##############################################################
sink("outputs/raw/earnings.csv")
for (counties in 1:5){
cat("\n",county_names[counties],"\n")
data <- fulldata[which(fulldata$FIPS %in% county_groups[[counties]]),]
for (r in races){
cat(r,",")
mn <- weighted.median(as.numeric(as.character(data[[paste0(r,"Median.Earnings")]])),as.numeric(as.character(data[[paste0("pop16",r)]])),na.rm=TRUE)
cat(mn,"\n")
}
cat("\n\n")
}
sink()
## UP TO DATE: 07/19
## MEDIAN EARNINGS -- FOR POPULATION 16 YEARS AND OVER WITH EARNINGS IN THE PAST 12 MONTHS
#############################################################
###################### IMPORTING DATA #######################
#############################################################
setwd("~/git/brs_paper")
earnings <- read.csv("data/earnings.csv")
# Rurality Data
data <- read.csv("data/cleaned.csv")
# Merging Data so FIPS are accurate
fulldata <- merge(data,earnings,by = "FIPS")
# Emp data
emp <- read.csv("data/emp.csv")
fulldata <- merge(fulldata, emp, by="FIPS")
whiteearnings <- fulldata$White.Median.Earnings
blackearnings <- fulldata$Black.Median.Earnings
earnings <- fulldata$Median.Earnings
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
races <- c('','white','black')
##############################################################
###################### GETTING NUMBERS #######################
##############################################################
sink("outputs/raw/earnings.csv")
for (counties in 1:5){
cat("\n",county_names[counties],"\n")
data <- fulldata[which(fulldata$FIPS %in% county_groups[[counties]]),]
for (r in races){
cat(r,",")
mn <- weighted.median(as.numeric(as.character(data[[paste0(r,"earnings")]])),as.numeric(as.character(data[[paste0("pop16",r)]])),na.rm=TRUE)
cat(mn,"\n")
}
cat("\n\n")
}
sink()
## UP TO DATE: 07/19
## MEDIAN EARNINGS -- FOR POPULATION 16 YEARS AND OVER WITH EARNINGS IN THE PAST 12 MONTHS
#############################################################
###################### IMPORTING DATA #######################
#############################################################
setwd("~/git/brs_paper")
earnings <- read.csv("data/earnings.csv")
# Rurality Data
data <- read.csv("data/cleaned.csv")
# Merging Data so FIPS are accurate
fulldata <- merge(data,earnings,by = "FIPS")
# Emp data
emp <- read.csv("data/emp.csv")
fulldata <- merge(fulldata, emp, by="FIPS")
fulldata$whiteearnings <- fulldata$White.Median.Earnings
fulldata$blackearnings <- fulldata$Black.Median.Earnings
fulldata$earnings <- fulldata$Median.Earnings
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
races <- c('','white','black')
##############################################################
###################### GETTING NUMBERS #######################
##############################################################
sink("outputs/raw/earnings.csv")
for (counties in 1:5){
cat("\n",county_names[counties],"\n")
data <- fulldata[which(fulldata$FIPS %in% county_groups[[counties]]),]
for (r in races){
cat(r,",")
mn <- weighted.median(as.numeric(as.character(data[[paste0(r,"earnings")]])),as.numeric(as.character(data[[paste0("pop16",r)]])),na.rm=TRUE)
cat(mn,"\n")
}
cat("\n\n")
}
sink()
## UP TO DATE: 07/23
## CHILD POVERTY GRAPH
setwd("~/git/brs_paper")
pov <- read.csv("data/acschildpoverty.csv")
data <- read.csv("data/cleaned.csv")
# Merging Data so FIPS are accurate
fulldata <- merge(data,pov,by = "FIPS")
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
## ANALYSIS
fulldata$blackpop <- fulldata$Black.Female.Children.in.Poverty + fulldata$Black.Female.Children.Not.in.Poverty + fulldata$Black.Male.Children.in.Poverty + fulldata$Black.Male.Children.Not.in.Poverty
fulldata$whitepop <- fulldata$White.Female.Children.in.Poverty + fulldata$White.Female.Children.Not.in.Poverty + fulldata$White.Male.Children.in.Poverty + fulldata$White.Male.Children.Not.in.Poverty
fulldata$blackpov <- fulldata$Black.Female.Children.in.Poverty + fulldata$Black.Male.Children.in.Poverty
fulldata$whitepov <- fulldata$White.Female.Children.in.Poverty + fulldata$White.Male.Children.in.Poverty
fulldata$allpop <- fulldata$Female.Children.in.Poverty + fulldata$Female.Children.Not.in.Poverty + fulldata$Male.Children.in.Poverty + fulldata$Male.Children.Not.in.Poverty
fulldata$allpov <- fulldata$Female.Children.in.Poverty + fulldata$Male.Children.in.Poverty
races <- c('all','white','black')
View(fulldata)
setwd("~/git/brs_paper")
pov <- read.csv("data/acs_poverty.csv")
data <- read.csv("data/cleaned.csv")
# Merging Data so FIPS are accurate
fulldata <- merge(data,pov,by = "FIPS")
# GENERATING FIPS LISTS
source("scripts/gen_county_fips.R")
races <- c('','White..not.Hispanic..','Black.')
View(fulldata)
